
./driver:     file format elf32-i386

SYMBOL TABLE:
000001b4 l    d  .interp	00000000              .interp
000001c8 l    d  .note.gnu.build-id	00000000              .note.gnu.build-id
000001ec l    d  .note.gnu.property	00000000              .note.gnu.property
00000208 l    d  .note.ABI-tag	00000000              .note.ABI-tag
00000228 l    d  .gnu.hash	00000000              .gnu.hash
00000248 l    d  .dynsym	00000000              .dynsym
00000448 l    d  .dynstr	00000000              .dynstr
000005c6 l    d  .gnu.version	00000000              .gnu.version
00000608 l    d  .gnu.version_r	00000000              .gnu.version_r
00000688 l    d  .rel.dyn	00000000              .rel.dyn
00000700 l    d  .rel.plt	00000000              .rel.plt
00001000 l    d  .init	00000000              .init
00001030 l    d  .plt	00000000              .plt
000011c0 l    d  .plt.got	00000000              .plt.got
000011d0 l    d  .plt.sec	00000000              .plt.sec
00001350 l    d  .text	00000000              .text
00003808 l    d  .fini	00000000              .fini
00004000 l    d  .rodata	00000000              .rodata
00004680 l    d  .eh_frame_hdr	00000000              .eh_frame_hdr
00004834 l    d  .eh_frame	00000000              .eh_frame
00006e70 l    d  .init_array	00000000              .init_array
00006e74 l    d  .fini_array	00000000              .fini_array
00006e78 l    d  .dynamic	00000000              .dynamic
00006f78 l    d  .got	00000000              .got
00007000 l    d  .data	00000000              .data
00007100 l    d  .bss	00000000              .bss
00000000 l    d  .comment	00000000              .comment
00000000 l    df *ABS*	00000000              driver.c
00001be0 l     F .text	00000132              create
00007160 l     O .bss	01c2001e              data
00007148 l     O .bss	00000004              orig
00007140 l     O .bss	00000004              result
00007144 l     O .bss	00000004              copy_of_orig
00001d20 l     F .text	000000dc              check_orig
00001e00 l     F .text	0000023f              check_rotate
00002040 l     F .text	000002fd              check_smooth
00001350 l     F .text	00000002              check_smooth.cold
01c27180 l     O .bss	00000004              smooth_benchmark_count
01c271a0 l     O .bss	00001450              benchmarks_smooth
01c27184 l     O .bss	00000004              rotate_benchmark_count
01c28600 l     O .bss	00001450              benchmarks_rotate
0000457c l     O .rodata	00000014              test_dim_rotate
00004540 l     O .rodata	00000028              rotate_baseline_cpes
00004568 l     O .rodata	00000014              test_dim_smooth
00004500 l     O .rodata	00000028              smooth_baseline_cpes
00001a1a l       .text	00000000              .L140
00001498 l       .text	00000000              .L147
0000147d l       .text	00000000              .L146
00001471 l       .text	00000000              .L145
00001465 l       .text	00000000              .L185
0000157c l       .text	00000000              .L143
0000156d l       .text	00000000              .L141
00000000 l    df *ABS*	00000000              kernels.c
00001352 l     F .text	00000002              naive_smooth.cold
00000000 l    df *ABS*	00000000              crtstuff.c
00001ad0 l     F .text	00000000              deregister_tm_clones
00001b10 l     F .text	00000000              register_tm_clones
00001b60 l     F .text	00000000              __do_global_dtors_aux
00007100 l     O .bss	00000001              completed.7622
00006e74 l     O .fini_array	00000000              __do_global_dtors_aux_fini_array_entry
00001bb0 l     F .text	00000000              frame_dummy
00006e70 l     O .init_array	00000000              __frame_dummy_init_array_entry
00000000 l    df *ABS*	00000000              fcyc.c
00002f00 l     F .text	0000007b              add_sample
01c29a54 l     O .bss	00000004              samplecount
000070f4 l     O .data	00000004              kbest
01c29a58 l     O .bss	00000004              values
00002f80 l     F .text	0000003c              has_converged
000070e8 l     O .data	00000008              epsilon
00002fc0 l     F .text	0000004a              init_sampler
00003010 l     F .text	0000009a              clear
01c29a5c l     O .bss	00000004              cache_buf
01c29a50 l     O .bss	00000004              sink
000070e0 l     O .data	00000004              cache_block
000070e4 l     O .data	00000004              cache_bytes
01c29a64 l     O .bss	00000004              compensate
000070f0 l     O .data	00000004              maxsamples
01c29a60 l     O .bss	00000004              clear_cache
00000000 l    df *ABS*	00000000              clock.c
01c29a7c l     O .bss	00000004              cyc_hi
01c29a78 l     O .bss	00000004              cyc_lo
01c29a70 l     O .bss	00000008              cyc_per_tick
01c29a68 l     O .bss	00000004              start_tick
00000000 l    df *ABS*	00000000              crtstuff.c
0000548c l     O .eh_frame	00000000              __FRAME_END__
00000000 l    df *ABS*	00000000              
00006e74 l       .init_array	00000000              __init_array_end
00006e78 l     O .dynamic	00000000              _DYNAMIC
00006e70 l       .init_array	00000000              __init_array_start
00004680 l       .eh_frame_hdr	00000000              __GNU_EH_FRAME_HDR
00006f78 l     O .got	00000000              _GLOBAL_OFFSET_TABLE_
00001000 l     F .init	00000000              _init
000037e0 g     F .text	00000005              __libc_csu_fini
000034b0 g     F .text	00000049              ovhd
00003360 g     F .text	00000019              set_fcyc_k
00000000       F *UND*	00000000              strcmp@@GLIBC_2.0
000070a0 g     O .data	0000002c              naive_rotate_descr
00000000  w      *UND*	00000000              _ITM_deregisterTMCloneTable
00001ac0 g     F .text	00000004              .hidden __x86.get_pc_thunk.bx
00007000  w      .data	00000000              data_start
00000000       F *UND*	00000000              times@@GLIBC_2.0
000033c0 g     F .text	00000019              access_counter
00000000       O *UND*	00000000              stderr@@GLIBC_2.0
00007130 g     O .bss	00000004              rotate_maxmean_desc
000037e5 g     F .text	00000000              .hidden __x86.get_pc_thunk.bp
000032d0 g     F .text	0000004a              set_fcyc_cache_size
00000000       F *UND*	00000000              free@@GLIBC_2.0
00000000       F *UND*	00000000              strdup@@GLIBC_2.0
00007120 g     O .bss	00000004              smooth_maxmean_desc
00002420 g     F .text	0000036f              test_rotate
00000000       F *UND*	00000000              fgets@@GLIBC_2.0
000033a0 g     F .text	00000019              set_fcyc_epsilon
000070f8 g       .data	00000000              _edata
00000000       F *UND*	00000000              fclose@@GLIBC_2.1
00000000       F *UND*	00000000              pow@@GLIBC_2.29
00000000       F *UND*	00000000              sleep@@GLIBC_2.0
000033e0 g     F .text	00000026              start_counter
00003808 g     F .fini	00000000              .hidden _fini
00000000       F *UND*	00000000              __stack_chk_fail@@GLIBC_2.4
00007138 g     O .bss	00000008              rotate_maxmean
00001bb9 g     F .text	00000000              .hidden __x86.get_pc_thunk.dx
00000000  w    F *UND*	00000000              __cxa_finalize@@GLIBC_2.1.3
00000000       F *UND*	00000000              fwrite@@GLIBC_2.0
00002cb0 g     F .text	000001be              naive_smooth
000032b0 g     F .text	00000019              set_fcyc_clear_cache
00000000       F *UND*	00000000              malloc@@GLIBC_2.0
00007000 g       .data	00000000              __data_start
00002790 g     F .text	00000031              run_smooth_benchmark
00000000       F *UND*	00000000              puts@@GLIBC_2.0
00000000       F *UND*	00000000              strsep@@GLIBC_2.0
00002bf3 g     F .text	00000000              .hidden __x86.get_pc_thunk.si
00000000  w      *UND*	00000000              __gmon_start__
00000000       F *UND*	00000000              exit@@GLIBC_2.0
00002340 g     F .text	00000043              add_smooth_function
00007004 g     O .data	00000000              .hidden __dso_handle
00007040 g     O .data	0000002c              naive_smooth_descr
00004004 g     O .rodata	00000004              _IO_stdin_used
00000000       F *UND*	00000000              srand@@GLIBC_2.0
00002c00 g     F .text	00000094              rotate
00000000       F *UND*	00000000              __libc_start_main@@GLIBC_2.0
00000000       F *UND*	00000000              getopt@@GLIBC_2.0
00007020 g     O .data	00000020              smooth_descr
000023e0 g     F .text	00000031              run_rotate_benchmark
00003770 g     F .text	00000065              __libc_csu_init
000035a0 g     F .text	0000015b              start_comp_counter
00000000       F *UND*	00000000              fopen@@GLIBC_2.1
000070cc g     O .data	00000014              team
00000000       F *UND*	00000000              putchar@@GLIBC_2.0
01c29a80 g       .bss	00000000              _end
00001a80 g     F .text	0000003a              _start
00002ec0 g     F .text	00000040              register_smooth_functions
000027d0 g     F .text	0000036f              test_smooth
00004000 g     O .rodata	00000004              _fp_hw
00007128 g     O .bss	00000008              smooth_maxmean
00002e70 g     F .text	00000009              smooth
00000000       F *UND*	00000000              rand@@GLIBC_2.0
00003380 g     F .text	00000019              set_fcyc_maxsamples
000070f8 g       .bss	00000000              __bss_start
00001360 g     F .text	00000717              main
00000000       F *UND*	00000000              __printf_chk@@GLIBC_2.3.4
00002b40 g     F .text	000000af              usage
00002bef g     F .text	00000000              .hidden __x86.get_pc_thunk.ax
00003700 g     F .text	0000006d              get_comp_counter
00001bc0 g     F .text	0000001c              func_wrapper
00003410 g     F .text	00000095              get_counter
00003340 g     F .text	00000019              set_fcyc_compensate
000030b0 g     F .text	000000f2              fcyc
00002e80 g     F .text	00000040              register_rotate_functions
000037f0 g     F .text	00000018              .hidden __stack_chk_fail_local
00007080 g     O .data	00000020              rotate_descr
000031b0 g     F .text	000000f2              fcyc_v
000070f8 g     O .data	00000000              .hidden __TMC_END__
00000000       F *UND*	00000000              __fprintf_chk@@GLIBC_2.3.4
00000000  w      *UND*	00000000              _ITM_registerTMCloneTable
00002390 g     F .text	00000043              add_rotate_function
00002ca0 g     F .text	00000009              naive_rotate
00000000       O *UND*	00000000              optarg@@GLIBC_2.0
00000000       F *UND*	00000000              strtol@@GLIBC_2.0
00003500 g     F .text	0000007d              mhz_full
00003580 g     F .text	00000016              mhz
000033b9 g     F .text	00000000              .hidden __x86.get_pc_thunk.cx
00000000       F *UND*	00000000              calloc@@GLIBC_2.0
00003320 g     F .text	00000019              set_fcyc_cache_block


